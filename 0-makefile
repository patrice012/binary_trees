CC := gcc
CFLAGS := -Wall -Wextra -Werror -pedantic


build: build_0 build_1 build_2 build_3 build_4 build_5 build_6 build_7 build_8 build_9 build_1 build_11 build_12 build_13 build_4 build_15 build_16 build_17 build_18

build_0:
	$(CC) $(CFLAGS) binary_tree_print.c 0-main.c 0-binary_tree_node.c -o 0-node
build_1:
	$(CC) $(CFLAGS) binary_tree_print.c 1-main.c 1-binary_tree_insert_left.c 0-binary_tree_node.c -o 1-left
build_2:
	$(CC) $(CFLAGS) binary_tree_print.c 2-main.c 2-binary_tree_insert_right.c 0-binary_tree_node.c -o 2-right
build_3:
	$(CC) $(CFLAGS) binary_tree_print.c 3-main.c 3-binary_tree_delete.c 0-binary_tree_node.c 2-binary_tree_insert_right.c -o 3-del
build_4:
	$(CC) $(CFLAGS) binary_tree_print.c 4-binary_tree_is_leaf.c 4-main.c 0-binary_tree_node.c 2-binary_tree_insert_right.c -o 4-leaf
build_5:
	$(CC) $(CFLAGS) binary_tree_print.c 5-binary_tree_is_root.c 5-main.c 0-binary_tree_node.c 2-binary_tree_insert_right.c -o 5-root
build_6:
	$(CC) $(CFLAGS) binary_tree_print.c 6-main.c 6-binary_tree_preorder.c 0-binary_tree_node.c -o 6-pre
build_7:
	$(CC) $(CFLAGS) binary_tree_print.c 7-main.c 7-binary_tree_inorder.c 0-binary_tree_node.c -o 7-in
build_8:
	$(CC) $(CFLAGS) binary_tree_print.c 8-main.c 8-binary_tree_postorder.c 0-binary_tree_node.c -o 8-post
build_9:
	$(CC) $(CFLAGS) binary_tree_print.c 9-binary_tree_height.c 9-main.c 0-binary_tree_node.c 2-binary_tree_insert_right.c -o 9-height
build_10:
	$(CC) $(CFLAGS) binary_tree_print.c 10-binary_tree_depth.c 10-main.c 0-binary_tree_node.c 2-binary_tree_insert_right.c -o 10-depth
build_11:
	$(CC) $(CFLAGS) binary_tree_print.c 11-binary_tree_size.c 11-main.c 0-binary_tree_node.c 2-binary_tree_insert_right.c -o 11-size
build_12:
	$(CC) $(CFLAGS) binary_tree_print.c 12-binary_tree_leaves.c 12-main.c 0-binary_tree_node.c 2-binary_tree_insert_right.c -o 12-leaves
build_13:
	$(CC) $(CFLAGS) binary_tree_print.c 13-binary_tree_nodes.c 13-main.c 0-binary_tree_node.c 2-binary_tree_insert_right.c -o 13-nodes
build_14:
	$(CC) $(CFLAGS)  binary_tree_print.c 14-binary_tree_balance.c 14-main.c 0-binary_tree_node.c 2-binary_tree_insert_right.c 1-binary_tree_insert_left.c -o 14-balance
build_15:
	$(CC) $(CFLAGS) binary_tree_print.c 15-binary_tree_is_full.c 15-main.c 0-binary_tree_node.c 2-binary_tree_insert_right.c -o 15-full
build_16:
	$(CC) $(CFLAGS) binary_tree_print.c 16-binary_tree_is_perfect.c 16-main.c 0-binary_tree_node.c 2-binary_tree_insert_right.c -o 16-perfect
build_17:
	$(CC) $(CFLAGS) binary_tree_print.c 17-main.c 17-binary_tree_sibling.c 0-binary_tree_node.c -o 17-sibling
build_18:
	$(CC) $(CFLAGS) binary_tree_print.c 18-main.c 18-binary_tree_uncle.c 0-binary_tree_node.c -o 18-uncle
	
